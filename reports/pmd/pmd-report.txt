src/main_frame/demo.java:1:	ExcessiveImports: A high number of imports can indicate a high degree of coupling within an object.
src/main_frame/demo.java:1:	ExcessiveImports: A high number of imports can indicate a high degree of coupling within an object.
src/main_frame/demo.java:36:	UnusedImports: Avoid unused imports such as 'java.security.DigestException'
src/main_frame/demo.java:36:	UnusedImports: Avoid unused imports such as 'java.security.DigestException'
src/main_frame/demo.java:86:	ImportFromSamePackage: No need to import a type that lives in the same package
src/main_frame/demo.java:86:	ImportFromSamePackage: No need to import a type that lives in the same package
src/main_frame/demo.java:91:	ClassNamingConventions: The class name 'demo' doesn't match '[A-Z][a-zA-Z0-9]*'
src/main_frame/demo.java:91:	ClassNamingConventions: The class name 'demo' doesn't match '[A-Z][a-zA-Z0-9]*'
src/main_frame/demo.java:91:	CommentRequired: Header comments are required
src/main_frame/demo.java:91:	CommentRequired: Header comments are required
src/main_frame/demo.java:91:	GodClass: Possible God Class (WMC=79, ATFD=158, TCC=31.522%)
src/main_frame/demo.java:91:	GodClass: Possible God Class (WMC=79, ATFD=158, TCC=31.522%)
src/main_frame/demo.java:91:	ModifiedCyclomaticComplexity: The class 'demo' has a Modified Cyclomatic Complexity of 6 (Highest = 20).
src/main_frame/demo.java:91:	ModifiedCyclomaticComplexity: The class 'demo' has a Modified Cyclomatic Complexity of 6 (Highest = 20).
src/main_frame/demo.java:91:	ShortClassName: Avoid short class names like demo
src/main_frame/demo.java:91:	ShortClassName: Avoid short class names like demo
src/main_frame/demo.java:91:	StdCyclomaticComplexity: The class 'demo' has a Standard Cyclomatic Complexity of 6 (Highest = 20).
src/main_frame/demo.java:91:	StdCyclomaticComplexity: The class 'demo' has a Standard Cyclomatic Complexity of 6 (Highest = 20).
src/main_frame/demo.java:91:	TooManyFields: Too many fields
src/main_frame/demo.java:91:	TooManyFields: Too many fields
src/main_frame/demo.java:91:	TooManyMethods: This class has too many methods, consider refactoring it.
src/main_frame/demo.java:91:	TooManyMethods: This class has too many methods, consider refactoring it.
src/main_frame/demo.java:92:	AvoidUncheckedExceptionsInSignatures: A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause
src/main_frame/demo.java:92:	AvoidUncheckedExceptionsInSignatures: A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause
src/main_frame/demo.java:92:	AvoidUncheckedExceptionsInSignatures: A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause
src/main_frame/demo.java:92:	AvoidUncheckedExceptionsInSignatures: A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause
src/main_frame/demo.java:92:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:92:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:92:	MethodArgumentCouldBeFinal: Parameter 'menu' is not assigned and could be declared final
src/main_frame/demo.java:92:	MethodArgumentCouldBeFinal: Parameter 'menu' is not assigned and could be declared final
src/main_frame/demo.java:92:	MethodNamingConventions: The instance method name 'Json' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:92:	MethodNamingConventions: The instance method name 'Json' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:93:	LocalVariableCouldBeFinal: Local variable 'parser' could be declared final
src/main_frame/demo.java:93:	LocalVariableCouldBeFinal: Local variable 'parser' could be declared final
src/main_frame/demo.java:94:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/main_frame/demo.java:94:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/main_frame/demo.java:94:	LocalVariableCouldBeFinal: Local variable 'json' could be declared final
src/main_frame/demo.java:94:	LocalVariableCouldBeFinal: Local variable 'json' could be declared final
src/main_frame/demo.java:95:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:95:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:95:	LocalVariableCouldBeFinal: Local variable 'change' could be declared final
src/main_frame/demo.java:95:	LocalVariableCouldBeFinal: Local variable 'change' could be declared final
src/main_frame/demo.java:98:	CommentRequired: Field comments are required
src/main_frame/demo.java:98:	CommentRequired: Field comments are required
src/main_frame/demo.java:98:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:98:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:98:	ImmutableField: Private field 'contentPane' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:98:	ImmutableField: Private field 'contentPane' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:98:	SingularField: Perhaps 'contentPane' could be replaced by a local variable.
src/main_frame/demo.java:98:	SingularField: Perhaps 'contentPane' could be replaced by a local variable.
src/main_frame/demo.java:99:	CommentRequired: Field comments are required
src/main_frame/demo.java:99:	CommentRequired: Field comments are required
src/main_frame/demo.java:99:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:99:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:100:	CommentRequired: Field comments are required
src/main_frame/demo.java:100:	CommentRequired: Field comments are required
src/main_frame/demo.java:100:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:100:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:100:	ImmutableField: Private field 'itemOpen' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:100:	ImmutableField: Private field 'itemOpen' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:101:	CommentRequired: Field comments are required
src/main_frame/demo.java:101:	CommentRequired: Field comments are required
src/main_frame/demo.java:101:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:101:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:101:	ImmutableField: Private field 'itemSave' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:101:	ImmutableField: Private field 'itemSave' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:104:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the flag field if you want a default access modifier
src/main_frame/demo.java:104:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the flag field if you want a default access modifier
src/main_frame/demo.java:104:	CommentRequired: Field comments are required
src/main_frame/demo.java:104:	CommentRequired: Field comments are required
src/main_frame/demo.java:104:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/demo.java:104:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/demo.java:104:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:104:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:104:	RedundantFieldInitializer: Avoid using redundant field initializer for 'flag'
src/main_frame/demo.java:104:	RedundantFieldInitializer: Avoid using redundant field initializer for 'flag'
src/main_frame/demo.java:107:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the currentFileName field if you want a default access modifier
src/main_frame/demo.java:107:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the currentFileName field if you want a default access modifier
src/main_frame/demo.java:107:	CommentRequired: Field comments are required
src/main_frame/demo.java:107:	CommentRequired: Field comments are required
src/main_frame/demo.java:107:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/demo.java:107:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/demo.java:107:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:107:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:107:	RedundantFieldInitializer: Avoid using redundant field initializer for 'currentFileName'
src/main_frame/demo.java:107:	RedundantFieldInitializer: Avoid using redundant field initializer for 'currentFileName'
src/main_frame/demo.java:110:	AvoidFieldNameMatchingMethodName: Field print has the same name as a method
src/main_frame/demo.java:110:	AvoidFieldNameMatchingMethodName: Field print has the same name as a method
src/main_frame/demo.java:110:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the print field if you want a default access modifier
src/main_frame/demo.java:110:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the print field if you want a default access modifier
src/main_frame/demo.java:110:	CommentRequired: Field comments are required
src/main_frame/demo.java:110:	CommentRequired: Field comments are required
src/main_frame/demo.java:110:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/demo.java:110:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/demo.java:110:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:110:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:110:	RedundantFieldInitializer: Avoid using redundant field initializer for 'print'
src/main_frame/demo.java:110:	RedundantFieldInitializer: Avoid using redundant field initializer for 'print'
src/main_frame/demo.java:111:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the graph field if you want a default access modifier
src/main_frame/demo.java:111:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the graph field if you want a default access modifier
src/main_frame/demo.java:111:	CommentRequired: Field comments are required
src/main_frame/demo.java:111:	CommentRequired: Field comments are required
src/main_frame/demo.java:111:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/demo.java:111:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/demo.java:111:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:111:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:111:	RedundantFieldInitializer: Avoid using redundant field initializer for 'graph'
src/main_frame/demo.java:111:	RedundantFieldInitializer: Avoid using redundant field initializer for 'graph'
src/main_frame/demo.java:114:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the currentPath field if you want a default access modifier
src/main_frame/demo.java:114:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the currentPath field if you want a default access modifier
src/main_frame/demo.java:114:	CommentRequired: Field comments are required
src/main_frame/demo.java:114:	CommentRequired: Field comments are required
src/main_frame/demo.java:114:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/demo.java:114:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/demo.java:114:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:114:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:114:	RedundantFieldInitializer: Avoid using redundant field initializer for 'currentPath'
src/main_frame/demo.java:114:	RedundantFieldInitializer: Avoid using redundant field initializer for 'currentPath'
src/main_frame/demo.java:116:	CommentRequired: Field comments are required
src/main_frame/demo.java:116:	CommentRequired: Field comments are required
src/main_frame/demo.java:116:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:116:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:119:	CommentRequired: Field comments are required
src/main_frame/demo.java:119:	CommentRequired: Field comments are required
src/main_frame/demo.java:119:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:119:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:121:	CommentRequired: Field comments are required
src/main_frame/demo.java:121:	CommentRequired: Field comments are required
src/main_frame/demo.java:121:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:121:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:121:	ImmutableField: Private field 'itemNew' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:121:	ImmutableField: Private field 'itemNew' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:122:	CommentRequired: Field comments are required
src/main_frame/demo.java:122:	CommentRequired: Field comments are required
src/main_frame/demo.java:122:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:122:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:122:	FieldNamingConventions: The field name 'separator_1' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:122:	FieldNamingConventions: The field name 'separator_1' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:122:	ImmutableField: Private field 'separator_1' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:122:	ImmutableField: Private field 'separator_1' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:122:	SingularField: Perhaps 'separator_1' could be replaced by a local variable.
src/main_frame/demo.java:122:	SingularField: Perhaps 'separator_1' could be replaced by a local variable.
src/main_frame/demo.java:122:	VariableNamingConventions: Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'separator_1' is not final.
src/main_frame/demo.java:122:	VariableNamingConventions: Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'separator_1' is not final.
src/main_frame/demo.java:123:	CommentRequired: Field comments are required
src/main_frame/demo.java:123:	CommentRequired: Field comments are required
src/main_frame/demo.java:123:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:123:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:123:	ImmutableField: Private field 'itemPrint' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:123:	ImmutableField: Private field 'itemPrint' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:124:	CommentRequired: Field comments are required
src/main_frame/demo.java:124:	CommentRequired: Field comments are required
src/main_frame/demo.java:124:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:124:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:124:	ImmutableField: Private field 'itemExit' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:124:	ImmutableField: Private field 'itemExit' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:125:	CommentRequired: Field comments are required
src/main_frame/demo.java:125:	CommentRequired: Field comments are required
src/main_frame/demo.java:125:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:125:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:125:	FieldNamingConventions: The field name 'separator_2' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:125:	FieldNamingConventions: The field name 'separator_2' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:125:	ImmutableField: Private field 'separator_2' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:125:	ImmutableField: Private field 'separator_2' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:125:	SingularField: Perhaps 'separator_2' could be replaced by a local variable.
src/main_frame/demo.java:125:	SingularField: Perhaps 'separator_2' could be replaced by a local variable.
src/main_frame/demo.java:125:	VariableNamingConventions: Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'separator_2' is not final.
src/main_frame/demo.java:125:	VariableNamingConventions: Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'separator_2' is not final.
src/main_frame/demo.java:126:	CommentRequired: Field comments are required
src/main_frame/demo.java:126:	CommentRequired: Field comments are required
src/main_frame/demo.java:126:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:126:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:127:	CommentRequired: Field comments are required
src/main_frame/demo.java:127:	CommentRequired: Field comments are required
src/main_frame/demo.java:127:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:127:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:128:	CommentRequired: Field comments are required
src/main_frame/demo.java:128:	CommentRequired: Field comments are required
src/main_frame/demo.java:128:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:128:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:129:	CommentRequired: Field comments are required
src/main_frame/demo.java:129:	CommentRequired: Field comments are required
src/main_frame/demo.java:129:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:129:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:129:	ImmutableField: Private field 'itemSearchForHelp' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:129:	ImmutableField: Private field 'itemSearchForHelp' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:130:	CommentRequired: Field comments are required
src/main_frame/demo.java:130:	CommentRequired: Field comments are required
src/main_frame/demo.java:130:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:130:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:130:	ImmutableField: Private field 'itemFind' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:130:	ImmutableField: Private field 'itemFind' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:131:	CommentRequired: Field comments are required
src/main_frame/demo.java:131:	CommentRequired: Field comments are required
src/main_frame/demo.java:131:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:131:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:131:	ImmutableField: Private field 'itemChangeToPDF' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:131:	ImmutableField: Private field 'itemChangeToPDF' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:132:	CommentRequired: Field comments are required
src/main_frame/demo.java:132:	CommentRequired: Field comments are required
src/main_frame/demo.java:132:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:132:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:132:	ImmutableField: Private field 'itemTime' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:132:	ImmutableField: Private field 'itemTime' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:133:	CommentRequired: Field comments are required
src/main_frame/demo.java:133:	CommentRequired: Field comments are required
src/main_frame/demo.java:133:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:133:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:133:	ImmutableField: Private field 'scrollPane' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:133:	ImmutableField: Private field 'scrollPane' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:133:	SingularField: Perhaps 'scrollPane' could be replaced by a local variable.
src/main_frame/demo.java:133:	SingularField: Perhaps 'scrollPane' could be replaced by a local variable.
src/main_frame/demo.java:134:	CommentRequired: Field comments are required
src/main_frame/demo.java:134:	CommentRequired: Field comments are required
src/main_frame/demo.java:134:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:134:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:134:	ImmutableField: Private field 'itemStatement' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:134:	ImmutableField: Private field 'itemStatement' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:135:	CommentRequired: Field comments are required
src/main_frame/demo.java:135:	CommentRequired: Field comments are required
src/main_frame/demo.java:135:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:135:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:135:	ImmutableField: Private field 'tool' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:135:	ImmutableField: Private field 'tool' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:136:	CommentRequired: Field comments are required
src/main_frame/demo.java:136:	CommentRequired: Field comments are required
src/main_frame/demo.java:136:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:136:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:137:	CommentRequired: Field comments are required
src/main_frame/demo.java:137:	CommentRequired: Field comments are required
src/main_frame/demo.java:137:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:137:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:137:	FieldNamingConventions: The field name 'Cut_fun' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:137:	FieldNamingConventions: The field name 'Cut_fun' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:137:	ImmutableField: Private field 'Cut_fun' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:137:	ImmutableField: Private field 'Cut_fun' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:137:	VariableNamingConventions: Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'Cut_fun' is not final.
src/main_frame/demo.java:137:	VariableNamingConventions: Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'Cut_fun' is not final.
src/main_frame/demo.java:137:	VariableNamingConventions: Variables should start with a lowercase character, 'Cut_fun' starts with uppercase character.
src/main_frame/demo.java:137:	VariableNamingConventions: Variables should start with a lowercase character, 'Cut_fun' starts with uppercase character.
src/main_frame/demo.java:138:	CommentRequired: Field comments are required
src/main_frame/demo.java:138:	CommentRequired: Field comments are required
src/main_frame/demo.java:138:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:138:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:138:	FieldNamingConventions: The field name 'Copy_fun' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:138:	FieldNamingConventions: The field name 'Copy_fun' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:138:	ImmutableField: Private field 'Copy_fun' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:138:	ImmutableField: Private field 'Copy_fun' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:138:	VariableNamingConventions: Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'Copy_fun' is not final.
src/main_frame/demo.java:138:	VariableNamingConventions: Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'Copy_fun' is not final.
src/main_frame/demo.java:138:	VariableNamingConventions: Variables should start with a lowercase character, 'Copy_fun' starts with uppercase character.
src/main_frame/demo.java:138:	VariableNamingConventions: Variables should start with a lowercase character, 'Copy_fun' starts with uppercase character.
src/main_frame/demo.java:139:	CommentRequired: Field comments are required
src/main_frame/demo.java:139:	CommentRequired: Field comments are required
src/main_frame/demo.java:139:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:139:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:139:	FieldNamingConventions: The field name 'Paste_fun' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:139:	FieldNamingConventions: The field name 'Paste_fun' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:139:	ImmutableField: Private field 'Paste_fun' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:139:	ImmutableField: Private field 'Paste_fun' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:139:	VariableNamingConventions: Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'Paste_fun' is not final.
src/main_frame/demo.java:139:	VariableNamingConventions: Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'Paste_fun' is not final.
src/main_frame/demo.java:139:	VariableNamingConventions: Variables should start with a lowercase character, 'Paste_fun' starts with uppercase character.
src/main_frame/demo.java:139:	VariableNamingConventions: Variables should start with a lowercase character, 'Paste_fun' starts with uppercase character.
src/main_frame/demo.java:140:	CommentRequired: Field comments are required
src/main_frame/demo.java:140:	CommentRequired: Field comments are required
src/main_frame/demo.java:140:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:140:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:140:	FieldNamingConventions: The field name 'Menu' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:140:	FieldNamingConventions: The field name 'Menu' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:140:	ImmutableField: Private field 'Menu' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:140:	ImmutableField: Private field 'Menu' could be made final; it is only initialized in the declaration or constructor.
src/main_frame/demo.java:140:	SingularField: Perhaps 'Menu' could be replaced by a local variable.
src/main_frame/demo.java:140:	SingularField: Perhaps 'Menu' could be replaced by a local variable.
src/main_frame/demo.java:140:	VariableNamingConventions: Variables should start with a lowercase character, 'Menu' starts with uppercase character.
src/main_frame/demo.java:140:	VariableNamingConventions: Variables should start with a lowercase character, 'Menu' starts with uppercase character.
src/main_frame/demo.java:143:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:143:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:143:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
src/main_frame/demo.java:143:	MethodArgumentCouldBeFinal: Parameter 'args' is not assigned and could be declared final
src/main_frame/demo.java:144:	DoNotUseThreads: To be compliant to J2EE, a webapp should not use any thread.
src/main_frame/demo.java:144:	DoNotUseThreads: To be compliant to J2EE, a webapp should not use any thread.
src/main_frame/demo.java:145:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:145:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:145:	MissingOverride: The method 'run()' is missing an @Override annotation.
src/main_frame/demo.java:145:	MissingOverride: The method 'run()' is missing an @Override annotation.
src/main_frame/demo.java:147:	LocalVariableCouldBeFinal: Local variable 'frame' could be declared final
src/main_frame/demo.java:147:	LocalVariableCouldBeFinal: Local variable 'frame' could be declared final
src/main_frame/demo.java:149:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/main_frame/demo.java:149:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/main_frame/demo.java:150:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:150:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:156:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the clock field if you want a default access modifier
src/main_frame/demo.java:156:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the clock field if you want a default access modifier
src/main_frame/demo.java:156:	CommentRequired: Field comments are required
src/main_frame/demo.java:156:	CommentRequired: Field comments are required
src/main_frame/demo.java:156:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/demo.java:156:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/demo.java:156:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:156:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:157:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the hour field if you want a default access modifier
src/main_frame/demo.java:157:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the hour field if you want a default access modifier
src/main_frame/demo.java:157:	CommentRequired: Field comments are required
src/main_frame/demo.java:157:	CommentRequired: Field comments are required
src/main_frame/demo.java:157:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/demo.java:157:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/demo.java:157:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:157:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:158:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the minute field if you want a default access modifier
src/main_frame/demo.java:158:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the minute field if you want a default access modifier
src/main_frame/demo.java:158:	CommentRequired: Field comments are required
src/main_frame/demo.java:158:	CommentRequired: Field comments are required
src/main_frame/demo.java:158:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/demo.java:158:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/demo.java:158:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:158:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:159:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the second field if you want a default access modifier
src/main_frame/demo.java:159:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the second field if you want a default access modifier
src/main_frame/demo.java:159:	CommentRequired: Field comments are required
src/main_frame/demo.java:159:	CommentRequired: Field comments are required
src/main_frame/demo.java:159:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/demo.java:159:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/demo.java:159:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:159:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main_frame/demo.java:162:	AvoidUncheckedExceptionsInSignatures: A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause
src/main_frame/demo.java:162:	AvoidUncheckedExceptionsInSignatures: A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause
src/main_frame/demo.java:162:	AvoidUncheckedExceptionsInSignatures: A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause
src/main_frame/demo.java:162:	AvoidUncheckedExceptionsInSignatures: A method or constructor should not explicitly declare unchecked exceptions in its 'throws' clause
src/main_frame/demo.java:162:	CallSuperInConstructor: It is a good practice to call super() in a constructor
src/main_frame/demo.java:162:	CallSuperInConstructor: It is a good practice to call super() in a constructor
src/main_frame/demo.java:162:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:162:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:162:	ExcessiveMethodLength: Avoid really long methods.
src/main_frame/demo.java:162:	ExcessiveMethodLength: Avoid really long methods.
src/main_frame/demo.java:162:	NcssCount: The constructor 'demo()' has a NCSS line count of 93.
src/main_frame/demo.java:162:	NcssCount: The constructor 'demo()' has a NCSS line count of 93.
src/main_frame/demo.java:166:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:166:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:168:	AvoidDuplicateLiterals: The String literal "Text Editor" appears 4 times in this file; the first occurrence is on line 168
src/main_frame/demo.java:168:	AvoidDuplicateLiterals: The String literal "Text Editor" appears 4 times in this file; the first occurrence is on line 168
src/main_frame/demo.java:172:	LocalVariableCouldBeFinal: Local variable 'menuBar' could be declared final
src/main_frame/demo.java:172:	LocalVariableCouldBeFinal: Local variable 'menuBar' could be declared final
src/main_frame/demo.java:175:	LocalVariableCouldBeFinal: Local variable 'itemFile' could be declared final
src/main_frame/demo.java:175:	LocalVariableCouldBeFinal: Local variable 'itemFile' could be declared final
src/main_frame/demo.java:177:	ConstructorCallsOverridableMethod: Overridable method 'Json' called during object construction
src/main_frame/demo.java:177:	ConstructorCallsOverridableMethod: Overridable method 'Json' called during object construction
src/main_frame/demo.java:187:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.awt.Event.CTRL_MASK' due to existing import 'java.awt.Event'
src/main_frame/demo.java:187:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.awt.Event.CTRL_MASK' due to existing import 'java.awt.Event'
src/main_frame/demo.java:187:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.awt.event.KeyEvent.VK_N' due to existing import 'java.awt.event.KeyEvent'
src/main_frame/demo.java:187:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.awt.event.KeyEvent.VK_N' due to existing import 'java.awt.event.KeyEvent'
src/main_frame/demo.java:193:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.awt.Event.CTRL_MASK' due to existing import 'java.awt.Event'
src/main_frame/demo.java:193:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.awt.Event.CTRL_MASK' due to existing import 'java.awt.Event'
src/main_frame/demo.java:193:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.awt.event.KeyEvent.VK_O' due to existing import 'java.awt.event.KeyEvent'
src/main_frame/demo.java:193:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.awt.event.KeyEvent.VK_O' due to existing import 'java.awt.event.KeyEvent'
src/main_frame/demo.java:199:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.awt.Event.CTRL_MASK' due to existing import 'java.awt.Event'
src/main_frame/demo.java:199:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.awt.Event.CTRL_MASK' due to existing import 'java.awt.Event'
src/main_frame/demo.java:199:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.awt.event.KeyEvent.VK_S' due to existing import 'java.awt.event.KeyEvent'
src/main_frame/demo.java:199:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.awt.event.KeyEvent.VK_S' due to existing import 'java.awt.event.KeyEvent'
src/main_frame/demo.java:208:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.awt.Event.CTRL_MASK' due to existing import 'java.awt.Event'
src/main_frame/demo.java:208:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.awt.Event.CTRL_MASK' due to existing import 'java.awt.Event'
src/main_frame/demo.java:208:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.awt.event.KeyEvent.VK_P' due to existing import 'java.awt.event.KeyEvent'
src/main_frame/demo.java:208:	UnnecessaryFullyQualifiedName: Unnecessary use of fully qualified name 'java.awt.event.KeyEvent.VK_P' due to existing import 'java.awt.event.KeyEvent'
src/main_frame/demo.java:280:	AssignmentToNonFinalStatic: Possible unsafe assignment to a non-final static field in a constructor.
src/main_frame/demo.java:280:	AssignmentToNonFinalStatic: Possible unsafe assignment to a non-final static field in a constructor.
src/main_frame/demo.java:286:	LocalVariableCouldBeFinal: Local variable 'clock' could be declared final
src/main_frame/demo.java:286:	LocalVariableCouldBeFinal: Local variable 'clock' could be declared final
src/main_frame/demo.java:290:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'jp' (lines '290'-'302').
src/main_frame/demo.java:290:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'jp' (lines '290'-'302').
src/main_frame/demo.java:290:	ShortVariable: Avoid variables with short names like jp
src/main_frame/demo.java:290:	ShortVariable: Avoid variables with short names like jp
src/main_frame/demo.java:293:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:293:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:293:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:293:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:304:	MethodNamingConventions: The instance method name 'MainFrameWidowListener' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:304:	MethodNamingConventions: The instance method name 'MainFrameWidowListener' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:308:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:308:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:308:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:308:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:310:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:310:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:312:	AvoidDuplicateLiterals: The String literal "Notepad" appears 9 times in this file; the first occurrence is on line 312
src/main_frame/demo.java:312:	AvoidDuplicateLiterals: The String literal "Notepad" appears 9 times in this file; the first occurrence is on line 312
src/main_frame/demo.java:315:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/main_frame/demo.java:315:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/main_frame/demo.java:323:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:323:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:329:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/main_frame/demo.java:329:	AccessorMethodGeneration: Avoid autogenerated methods to access private fields and methods of inner / outer classes
src/main_frame/demo.java:336:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:336:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:350:	MethodArgumentCouldBeFinal: Parameter 'component' is not assigned and could be declared final
src/main_frame/demo.java:350:	MethodArgumentCouldBeFinal: Parameter 'component' is not assigned and could be declared final
src/main_frame/demo.java:352:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:352:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:352:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:352:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:352:	MissingOverride: The method 'mousePressed(MouseEvent)' is missing an @Override annotation.
src/main_frame/demo.java:352:	MissingOverride: The method 'mousePressed(MouseEvent)' is missing an @Override annotation.
src/main_frame/demo.java:352:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:352:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:358:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:358:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:358:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:358:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:358:	MissingOverride: The method 'mouseReleased(MouseEvent)' is missing an @Override annotation.
src/main_frame/demo.java:358:	MissingOverride: The method 'mouseReleased(MouseEvent)' is missing an @Override annotation.
src/main_frame/demo.java:358:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:358:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:364:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:364:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:364:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:364:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:370:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:370:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:370:	CyclomaticComplexity: The method 'actionPerformed(ActionEvent)' has a cyclomatic complexity of 17.
src/main_frame/demo.java:370:	CyclomaticComplexity: The method 'actionPerformed(ActionEvent)' has a cyclomatic complexity of 17.
src/main_frame/demo.java:370:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:370:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:370:	MissingOverride: The method 'actionPerformed(ActionEvent)' is missing an @Override annotation.
src/main_frame/demo.java:370:	MissingOverride: The method 'actionPerformed(ActionEvent)' is missing an @Override annotation.
src/main_frame/demo.java:370:	ModifiedCyclomaticComplexity: The method 'actionPerformed' has a Modified Cyclomatic Complexity of 17.
src/main_frame/demo.java:370:	ModifiedCyclomaticComplexity: The method 'actionPerformed' has a Modified Cyclomatic Complexity of 17.
src/main_frame/demo.java:370:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:370:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:370:	StdCyclomaticComplexity: The method 'actionPerformed' has a Standard Cyclomatic Complexity of 17.
src/main_frame/demo.java:370:	StdCyclomaticComplexity: The method 'actionPerformed' has a Standard Cyclomatic Complexity of 17.
src/main_frame/demo.java:376:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:376:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:383:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:383:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:423:	CyclomaticComplexity: The method 'exit()' has a cyclomatic complexity of 10.
src/main_frame/demo.java:423:	CyclomaticComplexity: The method 'exit()' has a cyclomatic complexity of 10.
src/main_frame/demo.java:425:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:425:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:425:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:425:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:426:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:426:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:431:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:431:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:431:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:431:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:431:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:431:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:433:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:433:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:433:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:433:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:433:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:433:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:434:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:434:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:434:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:434:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:434:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:434:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:437:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:437:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:437:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:437:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:438:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:438:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:443:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:443:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:443:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:443:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:443:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:443:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:445:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:445:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:445:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:445:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:445:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:445:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:446:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:446:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:446:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:446:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:446:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:446:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:449:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:449:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:449:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:449:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:449:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:449:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:453:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:453:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:453:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:453:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:453:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:453:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:454:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:454:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:454:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:454:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:454:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:454:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:460:	CyclomaticComplexity: The method 'newFile()' has a cyclomatic complexity of 10.
src/main_frame/demo.java:460:	CyclomaticComplexity: The method 'newFile()' has a cyclomatic complexity of 10.
src/main_frame/demo.java:462:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main_frame/demo.java:462:	OnlyOneReturn: A method should have only one exit point, and that should be the last statement in the method
src/main_frame/demo.java:469:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:469:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:469:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:469:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:469:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:469:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:470:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:470:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:481:	AvoidLiteralsInIfCondition: Avoid using Literals in Conditional Statements
src/main_frame/demo.java:481:	AvoidLiteralsInIfCondition: Avoid using Literals in Conditional Statements
src/main_frame/demo.java:489:	LocalVariableCouldBeFinal: Local variable 'choose' could be declared final
src/main_frame/demo.java:489:	LocalVariableCouldBeFinal: Local variable 'choose' could be declared final
src/main_frame/demo.java:490:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:490:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:492:	LocalVariableCouldBeFinal: Local variable 'file' could be declared final
src/main_frame/demo.java:492:	LocalVariableCouldBeFinal: Local variable 'file' could be declared final
src/main_frame/demo.java:499:	LocalVariableCouldBeFinal: Local variable 'pdfChoose' could be declared final
src/main_frame/demo.java:499:	LocalVariableCouldBeFinal: Local variable 'pdfChoose' could be declared final
src/main_frame/demo.java:502:	LocalVariableCouldBeFinal: Local variable 'file' could be declared final
src/main_frame/demo.java:502:	LocalVariableCouldBeFinal: Local variable 'file' could be declared final
src/main_frame/demo.java:504:	LocalVariableCouldBeFinal: Local variable 'doc' could be declared final
src/main_frame/demo.java:504:	LocalVariableCouldBeFinal: Local variable 'doc' could be declared final
src/main_frame/demo.java:505:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/main_frame/demo.java:505:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/main_frame/demo.java:511:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:511:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:525:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:525:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:525:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/main_frame/demo.java:525:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/main_frame/demo.java:525:	MethodArgumentCouldBeFinal: Parameter 'textArea' is not assigned and could be declared final
src/main_frame/demo.java:525:	MethodArgumentCouldBeFinal: Parameter 'textArea' is not assigned and could be declared final
src/main_frame/demo.java:526:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'fw' (lines '526'-'528').
src/main_frame/demo.java:526:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'fw' (lines '526'-'528').
src/main_frame/demo.java:526:	ShortVariable: Avoid variables with short names like fw
src/main_frame/demo.java:526:	ShortVariable: Avoid variables with short names like fw
src/main_frame/demo.java:528:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/main_frame/demo.java:528:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/main_frame/demo.java:530:	LocalVariableCouldBeFinal: Local variable 'currentFileName' could be declared final
src/main_frame/demo.java:530:	LocalVariableCouldBeFinal: Local variable 'currentFileName' could be declared final
src/main_frame/demo.java:531:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'currentFileName' (lines '531'-'545').
src/main_frame/demo.java:531:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'currentFileName' (lines '531'-'545').
src/main_frame/demo.java:532:	LocalVariableCouldBeFinal: Local variable 'currentPath' could be declared final
src/main_frame/demo.java:532:	LocalVariableCouldBeFinal: Local variable 'currentPath' could be declared final
src/main_frame/demo.java:533:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'currentPath' (lines '533'-'545').
src/main_frame/demo.java:533:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'currentPath' (lines '533'-'545').
src/main_frame/demo.java:536:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:536:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:539:	IfStmtsMustUseBraces: Avoid using if statements without curly braces
src/main_frame/demo.java:539:	IfStmtsMustUseBraces: Avoid using if statements without curly braces
src/main_frame/demo.java:540:	ControlStatementBraces: This statement should have braces
src/main_frame/demo.java:540:	ControlStatementBraces: This statement should have braces
src/main_frame/demo.java:542:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:542:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:547:	CyclomaticComplexity: The method 'openFile()' has a cyclomatic complexity of 12.
src/main_frame/demo.java:547:	CyclomaticComplexity: The method 'openFile()' has a cyclomatic complexity of 12.
src/main_frame/demo.java:547:	ModifiedCyclomaticComplexity: The method 'openFile' has a Modified Cyclomatic Complexity of 10.
src/main_frame/demo.java:547:	ModifiedCyclomaticComplexity: The method 'openFile' has a Modified Cyclomatic Complexity of 10.
src/main_frame/demo.java:547:	StdCyclomaticComplexity: The method 'openFile' has a Standard Cyclomatic Complexity of 10.
src/main_frame/demo.java:547:	StdCyclomaticComplexity: The method 'openFile' has a Standard Cyclomatic Complexity of 10.
src/main_frame/demo.java:549:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:549:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:549:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:549:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:549:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:549:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:558:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:558:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:558:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:558:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:558:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:558:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:558:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:558:	UselessQualifiedThis: Useless qualified this usage in the same class.
src/main_frame/demo.java:567:	LocalVariableCouldBeFinal: Local variable 'choose' could be declared final
src/main_frame/demo.java:567:	LocalVariableCouldBeFinal: Local variable 'choose' could be declared final
src/main_frame/demo.java:568:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:568:	LocalVariableCouldBeFinal: Local variable 'result' could be declared final
src/main_frame/demo.java:572:	LocalVariableCouldBeFinal: Local variable 'file' could be declared final
src/main_frame/demo.java:572:	LocalVariableCouldBeFinal: Local variable 'file' could be declared final
src/main_frame/demo.java:573:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:573:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:573:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:573:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:573:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:573:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:573:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:573:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:573:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main_frame/demo.java:573:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main_frame/demo.java:573:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main_frame/demo.java:573:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main_frame/demo.java:575:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/main_frame/demo.java:575:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/main_frame/demo.java:575:	CloseResource: Ensure that resources like this FileInputStream object are closed after use
src/main_frame/demo.java:575:	CloseResource: Ensure that resources like this FileInputStream object are closed after use
src/main_frame/demo.java:575:	EmptyStatementNotInLoop: An empty statement (semicolon) not part of a loop
src/main_frame/demo.java:575:	EmptyStatementNotInLoop: An empty statement (semicolon) not part of a loop
src/main_frame/demo.java:575:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main_frame/demo.java:575:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main_frame/demo.java:575:	LocalVariableCouldBeFinal: Local variable 'file2' could be declared final
src/main_frame/demo.java:575:	LocalVariableCouldBeFinal: Local variable 'file2' could be declared final
src/main_frame/demo.java:576:	LocalVariableCouldBeFinal: Local variable 'pcontext' could be declared final
src/main_frame/demo.java:576:	LocalVariableCouldBeFinal: Local variable 'pcontext' could be declared final
src/main_frame/demo.java:577:	LocalVariableCouldBeFinal: Local variable 'handler' could be declared final
src/main_frame/demo.java:577:	LocalVariableCouldBeFinal: Local variable 'handler' could be declared final
src/main_frame/demo.java:578:	LocalVariableCouldBeFinal: Local variable 'metadata' could be declared final
src/main_frame/demo.java:578:	LocalVariableCouldBeFinal: Local variable 'metadata' could be declared final
src/main_frame/demo.java:580:	LocalVariableCouldBeFinal: Local variable 'openofficeparser' could be declared final
src/main_frame/demo.java:580:	LocalVariableCouldBeFinal: Local variable 'openofficeparser' could be declared final
src/main_frame/demo.java:585:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:585:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:586:	IdenticalCatchBranches: 'catch' branch identical to 'IOException' branch
src/main_frame/demo.java:586:	IdenticalCatchBranches: 'catch' branch identical to 'IOException' branch
src/main_frame/demo.java:588:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:588:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:589:	IdenticalCatchBranches: 'catch' branch identical to 'IOException' branch
src/main_frame/demo.java:589:	IdenticalCatchBranches: 'catch' branch identical to 'IOException' branch
src/main_frame/demo.java:591:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:591:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:600:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:600:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:600:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/main_frame/demo.java:600:	MethodArgumentCouldBeFinal: Parameter 'file' is not assigned and could be declared final
src/main_frame/demo.java:600:	MethodArgumentCouldBeFinal: Parameter 'textArea' is not assigned and could be declared final
src/main_frame/demo.java:600:	MethodArgumentCouldBeFinal: Parameter 'textArea' is not assigned and could be declared final
src/main_frame/demo.java:604:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'br' (lines '604'-'608').
src/main_frame/demo.java:604:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'br' (lines '604'-'608').
src/main_frame/demo.java:604:	ShortVariable: Avoid variables with short names like br
src/main_frame/demo.java:604:	ShortVariable: Avoid variables with short names like br
src/main_frame/demo.java:606:	CloseResource: Ensure that resources like this InputStreamReader object are closed after use
src/main_frame/demo.java:606:	CloseResource: Ensure that resources like this InputStreamReader object are closed after use
src/main_frame/demo.java:606:	LocalVariableCouldBeFinal: Local variable 'isr' could be declared final
src/main_frame/demo.java:606:	LocalVariableCouldBeFinal: Local variable 'isr' could be declared final
src/main_frame/demo.java:607:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/main_frame/demo.java:607:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/main_frame/demo.java:609:	LocalVariableCouldBeFinal: Local variable 'sb' could be declared final
src/main_frame/demo.java:609:	LocalVariableCouldBeFinal: Local variable 'sb' could be declared final
src/main_frame/demo.java:609:	ShortVariable: Avoid variables with short names like sb
src/main_frame/demo.java:609:	ShortVariable: Avoid variables with short names like sb
src/main_frame/demo.java:610:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'line' (lines '610'-'611').
src/main_frame/demo.java:610:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'line' (lines '610'-'611').
src/main_frame/demo.java:611:	AssignmentInOperand: Avoid assignments in operands
src/main_frame/demo.java:611:	AssignmentInOperand: Avoid assignments in operands
src/main_frame/demo.java:611:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'line' (lines '611'-'627').
src/main_frame/demo.java:611:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'line' (lines '611'-'627').
src/main_frame/demo.java:612:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/main_frame/demo.java:612:	InefficientStringBuffering: Avoid concatenating nonliterals in a StringBuffer/StringBuilder constructor or append().
src/main_frame/demo.java:616:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:616:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:617:	IdenticalCatchBranches: 'catch' branch identical to 'FileNotFoundException' branch
src/main_frame/demo.java:617:	IdenticalCatchBranches: 'catch' branch identical to 'FileNotFoundException' branch
src/main_frame/demo.java:618:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:618:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:621:	IfStmtsMustUseBraces: Avoid using if statements without curly braces
src/main_frame/demo.java:621:	IfStmtsMustUseBraces: Avoid using if statements without curly braces
src/main_frame/demo.java:622:	ControlStatementBraces: This statement should have braces
src/main_frame/demo.java:622:	ControlStatementBraces: This statement should have braces
src/main_frame/demo.java:623:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/main_frame/demo.java:623:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/main_frame/demo.java:624:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:624:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:628:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:628:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:628:	MethodNamingConventions: The instance method name 'Print' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:628:	MethodNamingConventions: The instance method name 'Print' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:630:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:630:	LawOfDemeter: Potential violation of Law of Demeter (method chain calls)
src/main_frame/demo.java:634:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/main_frame/demo.java:634:	AvoidCatchingGenericException: Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/main_frame/demo.java:634:	EmptyCatchBlock: Avoid empty catch blocks
src/main_frame/demo.java:634:	EmptyCatchBlock: Avoid empty catch blocks
src/main_frame/demo.java:639:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:639:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:641:	LocalVariableCouldBeFinal: Local variable 'start' could be declared final
src/main_frame/demo.java:641:	LocalVariableCouldBeFinal: Local variable 'start' could be declared final
src/main_frame/demo.java:642:	LocalVariableCouldBeFinal: Local variable 'end' could be declared final
src/main_frame/demo.java:642:	LocalVariableCouldBeFinal: Local variable 'end' could be declared final
src/main_frame/demo.java:647:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:647:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:648:	LocalVariableCouldBeFinal: Local variable 'temp' could be declared final
src/main_frame/demo.java:648:	LocalVariableCouldBeFinal: Local variable 'temp' could be declared final
src/main_frame/demo.java:649:	LocalVariableCouldBeFinal: Local variable 'text' could be declared final
src/main_frame/demo.java:649:	LocalVariableCouldBeFinal: Local variable 'text' could be declared final
src/main_frame/demo.java:653:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:653:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:654:	LocalVariableCouldBeFinal: Local variable 'contents' could be declared final
src/main_frame/demo.java:654:	LocalVariableCouldBeFinal: Local variable 'contents' could be declared final
src/main_frame/demo.java:655:	LocalVariableCouldBeFinal: Local variable 'flavor' could be declared final
src/main_frame/demo.java:655:	LocalVariableCouldBeFinal: Local variable 'flavor' could be declared final
src/main_frame/demo.java:656:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main_frame/demo.java:656:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main_frame/demo.java:660:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/main_frame/demo.java:660:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/main_frame/demo.java:661:	LocalVariableCouldBeFinal: Local variable 'start' could be declared final
src/main_frame/demo.java:661:	LocalVariableCouldBeFinal: Local variable 'start' could be declared final
src/main_frame/demo.java:662:	LocalVariableCouldBeFinal: Local variable 'end' could be declared final
src/main_frame/demo.java:662:	LocalVariableCouldBeFinal: Local variable 'end' could be declared final
src/main_frame/demo.java:665:	LocalVariableCouldBeFinal: Local variable 'mouse' could be declared final
src/main_frame/demo.java:665:	LocalVariableCouldBeFinal: Local variable 'mouse' could be declared final
src/main_frame/demo.java:669:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:669:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:670:	IdenticalCatchBranches: 'catch' branch identical to 'UnsupportedFlavorException' branch
src/main_frame/demo.java:670:	IdenticalCatchBranches: 'catch' branch identical to 'UnsupportedFlavorException' branch
src/main_frame/demo.java:671:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:671:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:672:	IdenticalCatchBranches: 'catch' branch identical to 'UnsupportedFlavorException' branch
src/main_frame/demo.java:672:	IdenticalCatchBranches: 'catch' branch identical to 'UnsupportedFlavorException' branch
src/main_frame/demo.java:673:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:673:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/demo.java:678:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:678:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:678:	MethodArgumentCouldBeFinal: Parameter 'down' is not assigned and could be declared final
src/main_frame/demo.java:678:	MethodArgumentCouldBeFinal: Parameter 'down' is not assigned and could be declared final
src/main_frame/demo.java:678:	MethodArgumentCouldBeFinal: Parameter 'judge' is not assigned and could be declared final
src/main_frame/demo.java:678:	MethodArgumentCouldBeFinal: Parameter 'judge' is not assigned and could be declared final
src/main_frame/demo.java:678:	MethodArgumentCouldBeFinal: Parameter 'search' is not assigned and could be declared final
src/main_frame/demo.java:678:	MethodArgumentCouldBeFinal: Parameter 'search' is not assigned and could be declared final
src/main_frame/demo.java:678:	MethodArgumentCouldBeFinal: Parameter 'textArea' is not assigned and could be declared final
src/main_frame/demo.java:678:	MethodArgumentCouldBeFinal: Parameter 'textArea' is not assigned and could be declared final
src/main_frame/demo.java:678:	MethodArgumentCouldBeFinal: Parameter 'up' is not assigned and could be declared final
src/main_frame/demo.java:678:	MethodArgumentCouldBeFinal: Parameter 'up' is not assigned and could be declared final
src/main_frame/demo.java:678:	ShortVariable: Avoid variables with short names like up
src/main_frame/demo.java:678:	ShortVariable: Avoid variables with short names like up
src/main_frame/demo.java:679:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'a' (lines '679'-'694').
src/main_frame/demo.java:679:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'a' (lines '679'-'694').
src/main_frame/demo.java:679:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'a' (lines '679'-'696').
src/main_frame/demo.java:679:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'a' (lines '679'-'696').
src/main_frame/demo.java:679:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'a' (lines '679'-'700').
src/main_frame/demo.java:679:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'a' (lines '679'-'700').
src/main_frame/demo.java:679:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'a' (lines '679'-'702').
src/main_frame/demo.java:679:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'a' (lines '679'-'702').
src/main_frame/demo.java:679:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'b' (lines '679'-'709').
src/main_frame/demo.java:679:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'b' (lines '679'-'709').
src/main_frame/demo.java:679:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'b' (lines '679'-'713').
src/main_frame/demo.java:679:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'b' (lines '679'-'713').
src/main_frame/demo.java:679:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'b' (lines '679'-'720').
src/main_frame/demo.java:679:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'b' (lines '679'-'720').
src/main_frame/demo.java:679:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main_frame/demo.java:679:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main_frame/demo.java:679:	ShortVariable: Avoid variables with short names like a
src/main_frame/demo.java:679:	ShortVariable: Avoid variables with short names like a
src/main_frame/demo.java:679:	ShortVariable: Avoid variables with short names like b
src/main_frame/demo.java:679:	ShortVariable: Avoid variables with short names like b
src/main_frame/demo.java:680:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'FindStartPos' (lines '680'-'720').
src/main_frame/demo.java:680:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'FindStartPos' (lines '680'-'720').
src/main_frame/demo.java:680:	LocalVariableCouldBeFinal: Local variable 'FindStartPos' could be declared final
src/main_frame/demo.java:680:	LocalVariableCouldBeFinal: Local variable 'FindStartPos' could be declared final
src/main_frame/demo.java:680:	LocalVariableNamingConventions: The local variable name 'FindStartPos' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:680:	LocalVariableNamingConventions: The local variable name 'FindStartPos' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:680:	VariableNamingConventions: Variables should start with a lowercase character, 'FindStartPos' starts with uppercase character.
src/main_frame/demo.java:680:	VariableNamingConventions: Variables should start with a lowercase character, 'FindStartPos' starts with uppercase character.
src/main_frame/demo.java:681:	LocalVariableNamingConventions: The local variable name 'search_lower' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:681:	LocalVariableNamingConventions: The local variable name 'search_lower' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:681:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main_frame/demo.java:681:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main_frame/demo.java:681:	VariableNamingConventions: Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'search_lower' is not final.
src/main_frame/demo.java:681:	VariableNamingConventions: Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'search_lower' is not final.
src/main_frame/demo.java:683:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'lower' (lines '683'-'720').
src/main_frame/demo.java:683:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'lower' (lines '683'-'720').
src/main_frame/demo.java:683:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main_frame/demo.java:683:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main_frame/demo.java:683:	UseLocaleWithCaseConversions: When doing a String.toLowerCase()/toUpperCase() call, use a Locale
src/main_frame/demo.java:683:	UseLocaleWithCaseConversions: When doing a String.toLowerCase()/toUpperCase() call, use a Locale
src/main_frame/demo.java:684:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'search_lower' (lines '684'-'720').
src/main_frame/demo.java:684:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'search_lower' (lines '684'-'720').
src/main_frame/demo.java:684:	UseLocaleWithCaseConversions: When doing a String.toLowerCase()/toUpperCase() call, use a Locale
src/main_frame/demo.java:684:	UseLocaleWithCaseConversions: When doing a String.toLowerCase()/toUpperCase() call, use a Locale
src/main_frame/demo.java:686:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'strA' (lines '686'-'720').
src/main_frame/demo.java:686:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'strA' (lines '686'-'720').
src/main_frame/demo.java:687:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'strB' (lines '687'-'720').
src/main_frame/demo.java:687:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'strB' (lines '687'-'720').
src/main_frame/demo.java:689:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'strA' (lines '689'-'720').
src/main_frame/demo.java:689:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'strA' (lines '689'-'720').
src/main_frame/demo.java:690:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'strB' (lines '690'-'720').
src/main_frame/demo.java:690:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'strB' (lines '690'-'720').
src/main_frame/demo.java:722:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:722:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:722:	ExcessiveMethodLength: Avoid really long methods.
src/main_frame/demo.java:722:	ExcessiveMethodLength: Avoid really long methods.
src/main_frame/demo.java:722:	ModifiedCyclomaticComplexity: The method 'mySearch' has a Modified Cyclomatic Complexity of 20.
src/main_frame/demo.java:722:	ModifiedCyclomaticComplexity: The method 'mySearch' has a Modified Cyclomatic Complexity of 20.
src/main_frame/demo.java:722:	NPathComplexity: The method 'mySearch()' has an NPath complexity of 8118
src/main_frame/demo.java:722:	NPathComplexity: The method 'mySearch()' has an NPath complexity of 8118
src/main_frame/demo.java:722:	StdCyclomaticComplexity: The method 'mySearch' has a Standard Cyclomatic Complexity of 20.
src/main_frame/demo.java:722:	StdCyclomaticComplexity: The method 'mySearch' has a Standard Cyclomatic Complexity of 20.
src/main_frame/demo.java:724:	LocalVariableCouldBeFinal: Local variable 'con' could be declared final
src/main_frame/demo.java:724:	LocalVariableCouldBeFinal: Local variable 'con' could be declared final
src/main_frame/demo.java:727:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'searchContentLabel' (lines '727'-'889').
src/main_frame/demo.java:727:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'searchContentLabel' (lines '727'-'889').
src/main_frame/demo.java:727:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'searchContentLabel' (lines '727'-'889').
src/main_frame/demo.java:727:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'searchContentLabel' (lines '727'-'889').
src/main_frame/demo.java:727:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'searchContentLabel' (lines '727'-'889').
src/main_frame/demo.java:727:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'searchContentLabel' (lines '727'-'889').
src/main_frame/demo.java:727:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'searchContentLabel' (lines '727'-'889').
src/main_frame/demo.java:727:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'searchContentLabel' (lines '727'-'889').
src/main_frame/demo.java:727:	LocalVariableCouldBeFinal: Local variable 'searchContentLabel' could be declared final
src/main_frame/demo.java:727:	LocalVariableCouldBeFinal: Local variable 'searchContentLabel' could be declared final
src/main_frame/demo.java:727:	LongVariable: Avoid excessively long variable names like searchContentLabel
src/main_frame/demo.java:727:	LongVariable: Avoid excessively long variable names like searchContentLabel
src/main_frame/demo.java:728:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceContentLabel' (lines '728'-'889').
src/main_frame/demo.java:728:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceContentLabel' (lines '728'-'889').
src/main_frame/demo.java:728:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceContentLabel' (lines '728'-'889').
src/main_frame/demo.java:728:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceContentLabel' (lines '728'-'889').
src/main_frame/demo.java:728:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceContentLabel' (lines '728'-'889').
src/main_frame/demo.java:728:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceContentLabel' (lines '728'-'889').
src/main_frame/demo.java:728:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceContentLabel' (lines '728'-'889').
src/main_frame/demo.java:728:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceContentLabel' (lines '728'-'889').
src/main_frame/demo.java:728:	LocalVariableCouldBeFinal: Local variable 'replaceContentLabel' could be declared final
src/main_frame/demo.java:728:	LocalVariableCouldBeFinal: Local variable 'replaceContentLabel' could be declared final
src/main_frame/demo.java:728:	LongVariable: Avoid excessively long variable names like replaceContentLabel
src/main_frame/demo.java:728:	LongVariable: Avoid excessively long variable names like replaceContentLabel
src/main_frame/demo.java:731:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'matchcase' (lines '731'-'889').
src/main_frame/demo.java:731:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'matchcase' (lines '731'-'889').
src/main_frame/demo.java:731:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'matchcase' (lines '731'-'889').
src/main_frame/demo.java:731:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'matchcase' (lines '731'-'889').
src/main_frame/demo.java:731:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'matchcase' (lines '731'-'889').
src/main_frame/demo.java:731:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'matchcase' (lines '731'-'889').
src/main_frame/demo.java:731:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'matchcase' (lines '731'-'889').
src/main_frame/demo.java:731:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'matchcase' (lines '731'-'889').
src/main_frame/demo.java:732:	LocalVariableCouldBeFinal: Local variable 'bGroup' could be declared final
src/main_frame/demo.java:732:	LocalVariableCouldBeFinal: Local variable 'bGroup' could be declared final
src/main_frame/demo.java:733:	ShortVariable: Avoid variables with short names like up
src/main_frame/demo.java:733:	ShortVariable: Avoid variables with short names like up
src/main_frame/demo.java:738:	LocalVariableCouldBeFinal: Local variable 'searchNext' could be declared final
src/main_frame/demo.java:738:	LocalVariableCouldBeFinal: Local variable 'searchNext' could be declared final
src/main_frame/demo.java:739:	LocalVariableCouldBeFinal: Local variable 'replace' could be declared final
src/main_frame/demo.java:739:	LocalVariableCouldBeFinal: Local variable 'replace' could be declared final
src/main_frame/demo.java:747:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:747:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:747:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:747:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:747:	MissingOverride: The method 'actionPerformed(ActionEvent)' is missing an @Override annotation.
src/main_frame/demo.java:747:	MissingOverride: The method 'actionPerformed(ActionEvent)' is missing an @Override annotation.
src/main_frame/demo.java:747:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:747:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:749:	IfStmtsMustUseBraces: Avoid using if statements without curly braces
src/main_frame/demo.java:749:	IfStmtsMustUseBraces: Avoid using if statements without curly braces
src/main_frame/demo.java:751:	ControlStatementBraces: This statement should have braces
src/main_frame/demo.java:751:	ControlStatementBraces: This statement should have braces
src/main_frame/demo.java:752:	IfStmtsMustUseBraces: Avoid using if statements without curly braces
src/main_frame/demo.java:752:	IfStmtsMustUseBraces: Avoid using if statements without curly braces
src/main_frame/demo.java:754:	ControlStatementBraces: This statement should have braces
src/main_frame/demo.java:754:	ControlStatementBraces: This statement should have braces
src/main_frame/demo.java:759:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:759:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:759:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:759:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:759:	MissingOverride: The method 'actionPerformed(ActionEvent)' is missing an @Override annotation.
src/main_frame/demo.java:759:	MissingOverride: The method 'actionPerformed(ActionEvent)' is missing an @Override annotation.
src/main_frame/demo.java:759:	ModifiedCyclomaticComplexity: The method 'actionPerformed' has a Modified Cyclomatic Complexity of 14.
src/main_frame/demo.java:759:	ModifiedCyclomaticComplexity: The method 'actionPerformed' has a Modified Cyclomatic Complexity of 14.
src/main_frame/demo.java:759:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:759:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:759:	StdCyclomaticComplexity: The method 'actionPerformed' has a Standard Cyclomatic Complexity of 14.
src/main_frame/demo.java:759:	StdCyclomaticComplexity: The method 'actionPerformed' has a Standard Cyclomatic Complexity of 14.
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'b' (lines '760'-'803').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'b' (lines '760'-'803').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'b' (lines '760'-'803').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'b' (lines '760'-'803').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'b' (lines '760'-'803').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'b' (lines '760'-'803').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'b' (lines '760'-'807').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'b' (lines '760'-'807').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'b' (lines '760'-'807').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'b' (lines '760'-'807').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'b' (lines '760'-'807').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'b' (lines '760'-'807').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '760'-'825').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '760'-'825').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '760'-'825').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '760'-'825').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '760'-'825').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '760'-'825').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '760'-'830').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '760'-'830').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '760'-'830').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '760'-'830').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '760'-'830').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '760'-'830').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'a' (lines '760'-'889').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'a' (lines '760'-'889').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'a' (lines '760'-'889').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'a' (lines '760'-'889').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'a' (lines '760'-'889').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'a' (lines '760'-'889').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'a' (lines '760'-'889').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'a' (lines '760'-'889').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'b' (lines '760'-'889').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'b' (lines '760'-'889').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'b' (lines '760'-'889').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'b' (lines '760'-'889').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'b' (lines '760'-'889').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'b' (lines '760'-'889').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceCount' (lines '760'-'889').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceCount' (lines '760'-'889').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceCount' (lines '760'-'889').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceCount' (lines '760'-'889').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceCount' (lines '760'-'889').
src/main_frame/demo.java:760:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceCount' (lines '760'-'889').
src/main_frame/demo.java:760:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main_frame/demo.java:760:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main_frame/demo.java:760:	PrematureDeclaration: Avoid declaring a variable if it is unreferenced before a possible exit point.
src/main_frame/demo.java:760:	PrematureDeclaration: Avoid declaring a variable if it is unreferenced before a possible exit point.
src/main_frame/demo.java:760:	PrematureDeclaration: Avoid declaring a variable if it is unreferenced before a possible exit point.
src/main_frame/demo.java:760:	PrematureDeclaration: Avoid declaring a variable if it is unreferenced before a possible exit point.
src/main_frame/demo.java:760:	PrematureDeclaration: Avoid declaring a variable if it is unreferenced before a possible exit point.
src/main_frame/demo.java:760:	PrematureDeclaration: Avoid declaring a variable if it is unreferenced before a possible exit point.
src/main_frame/demo.java:760:	ShortVariable: Avoid variables with short names like a
src/main_frame/demo.java:760:	ShortVariable: Avoid variables with short names like a
src/main_frame/demo.java:760:	ShortVariable: Avoid variables with short names like b
src/main_frame/demo.java:760:	ShortVariable: Avoid variables with short names like b
src/main_frame/demo.java:768:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'FindStartPos' (lines '768'-'889').
src/main_frame/demo.java:768:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'FindStartPos' (lines '768'-'889').
src/main_frame/demo.java:768:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'FindStartPos' (lines '768'-'889').
src/main_frame/demo.java:768:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'FindStartPos' (lines '768'-'889').
src/main_frame/demo.java:768:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'FindStartPos' (lines '768'-'889').
src/main_frame/demo.java:768:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'FindStartPos' (lines '768'-'889').
src/main_frame/demo.java:768:	LocalVariableCouldBeFinal: Local variable 'FindStartPos' could be declared final
src/main_frame/demo.java:768:	LocalVariableCouldBeFinal: Local variable 'FindStartPos' could be declared final
src/main_frame/demo.java:768:	LocalVariableNamingConventions: The local variable name 'FindStartPos' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:768:	LocalVariableNamingConventions: The local variable name 'FindStartPos' doesn't match '[a-z][a-zA-Z0-9]*'
src/main_frame/demo.java:768:	VariableNamingConventions: Variables should start with a lowercase character, 'FindStartPos' starts with uppercase character.
src/main_frame/demo.java:768:	VariableNamingConventions: Variables should start with a lowercase character, 'FindStartPos' starts with uppercase character.
src/main_frame/demo.java:769:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main_frame/demo.java:769:	OneDeclarationPerLine: Use one line for each declaration, it enhances code readability.
src/main_frame/demo.java:771:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'string2' (lines '771'-'771').
src/main_frame/demo.java:771:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'string2' (lines '771'-'771').
src/main_frame/demo.java:771:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'string2' (lines '771'-'771').
src/main_frame/demo.java:771:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'string2' (lines '771'-'771').
src/main_frame/demo.java:771:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'string2' (lines '771'-'771').
src/main_frame/demo.java:771:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'string2' (lines '771'-'771').
src/main_frame/demo.java:771:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'string2' (lines '771'-'889').
src/main_frame/demo.java:771:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'string2' (lines '771'-'889').
src/main_frame/demo.java:771:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'string2' (lines '771'-'889').
src/main_frame/demo.java:771:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'string2' (lines '771'-'889').
src/main_frame/demo.java:771:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'string2' (lines '771'-'889').
src/main_frame/demo.java:771:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'string2' (lines '771'-'889').
src/main_frame/demo.java:771:	UseLocaleWithCaseConversions: When doing a String.toLowerCase()/toUpperCase() call, use a Locale
src/main_frame/demo.java:771:	UseLocaleWithCaseConversions: When doing a String.toLowerCase()/toUpperCase() call, use a Locale
src/main_frame/demo.java:773:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'string4' (lines '773'-'773').
src/main_frame/demo.java:773:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'string4' (lines '773'-'773').
src/main_frame/demo.java:773:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'string4' (lines '773'-'773').
src/main_frame/demo.java:773:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'string4' (lines '773'-'773').
src/main_frame/demo.java:773:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'string4' (lines '773'-'773').
src/main_frame/demo.java:773:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'string4' (lines '773'-'773').
src/main_frame/demo.java:773:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'string4' (lines '773'-'889').
src/main_frame/demo.java:773:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'string4' (lines '773'-'889').
src/main_frame/demo.java:773:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'string4' (lines '773'-'889').
src/main_frame/demo.java:773:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'string4' (lines '773'-'889').
src/main_frame/demo.java:773:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'string4' (lines '773'-'889').
src/main_frame/demo.java:773:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'string4' (lines '773'-'889').
src/main_frame/demo.java:773:	UseLocaleWithCaseConversions: When doing a String.toLowerCase()/toUpperCase() call, use a Locale
src/main_frame/demo.java:773:	UseLocaleWithCaseConversions: When doing a String.toLowerCase()/toUpperCase() call, use a Locale
src/main_frame/demo.java:776:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringA' (lines '776'-'889').
src/main_frame/demo.java:776:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringA' (lines '776'-'889').
src/main_frame/demo.java:776:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringA' (lines '776'-'889').
src/main_frame/demo.java:776:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringA' (lines '776'-'889').
src/main_frame/demo.java:776:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringA' (lines '776'-'889').
src/main_frame/demo.java:776:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringA' (lines '776'-'889').
src/main_frame/demo.java:777:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringB' (lines '777'-'889').
src/main_frame/demo.java:777:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringB' (lines '777'-'889').
src/main_frame/demo.java:777:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringB' (lines '777'-'889').
src/main_frame/demo.java:777:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringB' (lines '777'-'889').
src/main_frame/demo.java:777:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringB' (lines '777'-'889').
src/main_frame/demo.java:777:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringB' (lines '777'-'889').
src/main_frame/demo.java:779:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringA' (lines '779'-'889').
src/main_frame/demo.java:779:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringA' (lines '779'-'889').
src/main_frame/demo.java:779:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringA' (lines '779'-'889').
src/main_frame/demo.java:779:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringA' (lines '779'-'889').
src/main_frame/demo.java:779:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringA' (lines '779'-'889').
src/main_frame/demo.java:779:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringA' (lines '779'-'889').
src/main_frame/demo.java:780:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringB' (lines '780'-'889').
src/main_frame/demo.java:780:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringB' (lines '780'-'889').
src/main_frame/demo.java:780:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringB' (lines '780'-'889').
src/main_frame/demo.java:780:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringB' (lines '780'-'889').
src/main_frame/demo.java:780:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringB' (lines '780'-'889').
src/main_frame/demo.java:780:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'stringB' (lines '780'-'889').
src/main_frame/demo.java:825:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '825'-'825').
src/main_frame/demo.java:825:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '825'-'825').
src/main_frame/demo.java:825:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '825'-'825').
src/main_frame/demo.java:825:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '825'-'825').
src/main_frame/demo.java:825:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '825'-'825').
src/main_frame/demo.java:825:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '825'-'825').
src/main_frame/demo.java:825:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '825'-'830').
src/main_frame/demo.java:825:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '825'-'830').
src/main_frame/demo.java:825:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '825'-'830').
src/main_frame/demo.java:825:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '825'-'830').
src/main_frame/demo.java:825:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '825'-'830').
src/main_frame/demo.java:825:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '825'-'830').
src/main_frame/demo.java:825:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceCount' (lines '825'-'889').
src/main_frame/demo.java:825:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceCount' (lines '825'-'889').
src/main_frame/demo.java:825:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceCount' (lines '825'-'889').
src/main_frame/demo.java:825:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceCount' (lines '825'-'889').
src/main_frame/demo.java:825:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceCount' (lines '825'-'889').
src/main_frame/demo.java:825:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceCount' (lines '825'-'889').
src/main_frame/demo.java:830:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '830'-'825').
src/main_frame/demo.java:830:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '830'-'825').
src/main_frame/demo.java:830:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '830'-'825').
src/main_frame/demo.java:830:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '830'-'825').
src/main_frame/demo.java:830:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '830'-'825').
src/main_frame/demo.java:830:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '830'-'825').
src/main_frame/demo.java:830:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '830'-'830').
src/main_frame/demo.java:830:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '830'-'830').
src/main_frame/demo.java:830:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '830'-'830').
src/main_frame/demo.java:830:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '830'-'830').
src/main_frame/demo.java:830:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '830'-'830').
src/main_frame/demo.java:830:	DataflowAnomalyAnalysis: Found 'DD'-anomaly for variable 'replaceCount' (lines '830'-'830').
src/main_frame/demo.java:830:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceCount' (lines '830'-'889').
src/main_frame/demo.java:830:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceCount' (lines '830'-'889').
src/main_frame/demo.java:830:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceCount' (lines '830'-'889').
src/main_frame/demo.java:830:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceCount' (lines '830'-'889').
src/main_frame/demo.java:830:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceCount' (lines '830'-'889').
src/main_frame/demo.java:830:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'replaceCount' (lines '830'-'889').
src/main_frame/demo.java:838:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:838:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:838:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:838:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:838:	MissingOverride: The method 'actionPerformed(ActionEvent)' is missing an @Override annotation.
src/main_frame/demo.java:838:	MissingOverride: The method 'actionPerformed(ActionEvent)' is missing an @Override annotation.
src/main_frame/demo.java:838:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:838:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:839:	LocalVariableCouldBeFinal: Local variable 'search' could be declared final
src/main_frame/demo.java:839:	LocalVariableCouldBeFinal: Local variable 'search' could be declared final
src/main_frame/demo.java:840:	LocalVariableCouldBeFinal: Local variable 'judge' could be declared final
src/main_frame/demo.java:840:	LocalVariableCouldBeFinal: Local variable 'judge' could be declared final
src/main_frame/demo.java:841:	LocalVariableCouldBeFinal: Local variable 'judgeUP' could be declared final
src/main_frame/demo.java:841:	LocalVariableCouldBeFinal: Local variable 'judgeUP' could be declared final
src/main_frame/demo.java:842:	LocalVariableCouldBeFinal: Local variable 'judgeDown' could be declared final
src/main_frame/demo.java:842:	LocalVariableCouldBeFinal: Local variable 'judgeDown' could be declared final
src/main_frame/demo.java:843:	SystemPrintln: System.out.print is used
src/main_frame/demo.java:843:	SystemPrintln: System.out.print is used
src/main_frame/demo.java:848:	LocalVariableCouldBeFinal: Local variable 'cancel' could be declared final
src/main_frame/demo.java:848:	LocalVariableCouldBeFinal: Local variable 'cancel' could be declared final
src/main_frame/demo.java:851:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:851:	CommentRequired: Public method and constructor comments are required
src/main_frame/demo.java:851:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:851:	MethodArgumentCouldBeFinal: Parameter 'e' is not assigned and could be declared final
src/main_frame/demo.java:851:	MissingOverride: The method 'actionPerformed(ActionEvent)' is missing an @Override annotation.
src/main_frame/demo.java:851:	MissingOverride: The method 'actionPerformed(ActionEvent)' is missing an @Override annotation.
src/main_frame/demo.java:851:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:851:	ShortVariable: Avoid variables with short names like e
src/main_frame/demo.java:856:	LocalVariableCouldBeFinal: Local variable 'bottomPanel' could be declared final
src/main_frame/demo.java:856:	LocalVariableCouldBeFinal: Local variable 'bottomPanel' could be declared final
src/main_frame/demo.java:857:	LocalVariableCouldBeFinal: Local variable 'centerPanel' could be declared final
src/main_frame/demo.java:857:	LocalVariableCouldBeFinal: Local variable 'centerPanel' could be declared final
src/main_frame/demo.java:859:	LocalVariableCouldBeFinal: Local variable 'topPanel' could be declared final
src/main_frame/demo.java:859:	LocalVariableCouldBeFinal: Local variable 'topPanel' could be declared final
src/main_frame/demo.java:861:	LocalVariableCouldBeFinal: Local variable 'direction' could be declared final
src/main_frame/demo.java:861:	LocalVariableCouldBeFinal: Local variable 'direction' could be declared final
src/main_frame/demo.java:866:	LocalVariableCouldBeFinal: Local variable 'replacePanel' could be declared final
src/main_frame/demo.java:866:	LocalVariableCouldBeFinal: Local variable 'replacePanel' could be declared final
src/main_frame/demo.java:881:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main_frame/demo.java:881:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main_frame/demo.java:882:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main_frame/demo.java:882:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main_frame/demo.java:883:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main_frame/demo.java:883:	LawOfDemeter: Potential violation of Law of Demeter (object not created locally)
src/main_frame/test1.java:15:	UnusedImports: Avoid unused imports such as 'org.junit.jupiter.api.BeforeEach'
src/main_frame/test1.java:15:	UnusedImports: Avoid unused imports such as 'org.junit.jupiter.api.BeforeEach'
src/main_frame/test1.java:18:	ImportFromSamePackage: No need to import a type that lives in the same package
src/main_frame/test1.java:18:	ImportFromSamePackage: No need to import a type that lives in the same package
src/main_frame/test1.java:20:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main_frame/test1.java:20:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main_frame/test1.java:20:	ClassNamingConventions: The class name 'test1' doesn't match '[A-Z][a-zA-Z0-9]*'
src/main_frame/test1.java:20:	ClassNamingConventions: The class name 'test1' doesn't match '[A-Z][a-zA-Z0-9]*'
src/main_frame/test1.java:20:	CommentRequired: Header comments are required
src/main_frame/test1.java:20:	CommentRequired: Header comments are required
src/main_frame/test1.java:22:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/test1.java:22:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/test1.java:23:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test method if you want a default access modifier
src/main_frame/test1.java:23:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the test method if you want a default access modifier
src/main_frame/test1.java:23:	DataflowAnomalyAnalysis: Found 'UR'-anomaly for variable 'pathname' (lines '23'-'23').
src/main_frame/test1.java:23:	DataflowAnomalyAnalysis: Found 'UR'-anomaly for variable 'pathname' (lines '23'-'23').
src/main_frame/test1.java:24:	LocalVariableCouldBeFinal: Local variable 'testword' could be declared final
src/main_frame/test1.java:24:	LocalVariableCouldBeFinal: Local variable 'testword' could be declared final
src/main_frame/test1.java:25:	LocalVariableCouldBeFinal: Local variable 'newframe' could be declared final
src/main_frame/test1.java:25:	LocalVariableCouldBeFinal: Local variable 'newframe' could be declared final
src/main_frame/test1.java:26:	LocalVariableCouldBeFinal: Local variable 'textArea' could be declared final
src/main_frame/test1.java:26:	LocalVariableCouldBeFinal: Local variable 'textArea' could be declared final
src/main_frame/test1.java:29:	LocalVariableCouldBeFinal: Local variable 'file' could be declared final
src/main_frame/test1.java:29:	LocalVariableCouldBeFinal: Local variable 'file' could be declared final
src/main_frame/test1.java:32:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'pathname' (lines '32'-'46').
src/main_frame/test1.java:32:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'pathname' (lines '32'-'46').
src/main_frame/test1.java:32:	LocalVariableCouldBeFinal: Local variable 'pathname' could be declared final
src/main_frame/test1.java:32:	LocalVariableCouldBeFinal: Local variable 'pathname' could be declared final
src/main_frame/test1.java:34:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/main_frame/test1.java:34:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/main_frame/test1.java:35:	ShortVariable: Avoid variables with short names like br
src/main_frame/test1.java:35:	ShortVariable: Avoid variables with short names like br
src/main_frame/test1.java:39:	AssignmentInOperand: Avoid assignments in operands
src/main_frame/test1.java:39:	AssignmentInOperand: Avoid assignments in operands
src/main_frame/test1.java:39:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'line' (lines '39'-'46').
src/main_frame/test1.java:39:	DataflowAnomalyAnalysis: Found 'DU'-anomaly for variable 'line' (lines '39'-'46').
src/main_frame/test1.java:40:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main_frame/test1.java:40:	UseStringBufferForStringAppends: Prefer StringBuilder (non-synchronized) or StringBuffer (synchronized) over += for concatenating strings
src/main_frame/test1.java:43:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/test1.java:43:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main_frame/test1.java:45:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/main_frame/test1.java:45:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/main_frame/test1.java:47:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/test1.java:47:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/test1.java:48:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testopen method if you want a default access modifier
src/main_frame/test1.java:48:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testopen method if you want a default access modifier
src/main_frame/test1.java:49:	LocalVariableCouldBeFinal: Local variable 'file' could be declared final
src/main_frame/test1.java:49:	LocalVariableCouldBeFinal: Local variable 'file' could be declared final
src/main_frame/test1.java:51:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/main_frame/test1.java:51:	AvoidFileStream: Avoid instantiating FileInputStream, FileOutputStream, FileReader, or FileWriter
src/main_frame/test1.java:51:	CloseResource: Ensure that resources like this FileWriter object are closed after use
src/main_frame/test1.java:51:	CloseResource: Ensure that resources like this FileWriter object are closed after use
src/main_frame/test1.java:51:	LocalVariableCouldBeFinal: Local variable 'out' could be declared final
src/main_frame/test1.java:51:	LocalVariableCouldBeFinal: Local variable 'out' could be declared final
src/main_frame/test1.java:52:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/main_frame/test1.java:52:	LocalVariableCouldBeFinal: Local variable 'data' could be declared final
src/main_frame/test1.java:56:	LocalVariableCouldBeFinal: Local variable 'newframe' could be declared final
src/main_frame/test1.java:56:	LocalVariableCouldBeFinal: Local variable 'newframe' could be declared final
src/main_frame/test1.java:57:	LocalVariableCouldBeFinal: Local variable 'textArea' could be declared final
src/main_frame/test1.java:57:	LocalVariableCouldBeFinal: Local variable 'textArea' could be declared final
src/main_frame/test1.java:60:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/main_frame/test1.java:60:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/main_frame/test1.java:63:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/test1.java:63:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main_frame/test1.java:64:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testSearch method if you want a default access modifier
src/main_frame/test1.java:64:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the testSearch method if you want a default access modifier
src/main_frame/test1.java:65:	LocalVariableCouldBeFinal: Local variable 'newframe' could be declared final
src/main_frame/test1.java:65:	LocalVariableCouldBeFinal: Local variable 'newframe' could be declared final
src/main_frame/test1.java:66:	LocalVariableCouldBeFinal: Local variable 'textArea' could be declared final
src/main_frame/test1.java:66:	LocalVariableCouldBeFinal: Local variable 'textArea' could be declared final
src/main_frame/test1.java:70:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/main_frame/test1.java:70:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/main_frame/test1.java:70:	UseAssertSameInsteadOfAssertTrue: Use assertSame(x, y) instead of assertTrue(x==y), or assertNotSame(x,y) vs assertFalse(x==y)
src/main_frame/test1.java:70:	UseAssertSameInsteadOfAssertTrue: Use assertSame(x, y) instead of assertTrue(x==y), or assertNotSame(x,y) vs assertFalse(x==y)
src/main_frame/time_and_date.java:6:	ImportFromSamePackage: No need to import a type that lives in the same package
src/main_frame/time_and_date.java:6:	ImportFromSamePackage: No need to import a type that lives in the same package
src/main_frame/time_and_date.java:8:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main_frame/time_and_date.java:8:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main_frame/time_and_date.java:8:	ClassNamingConventions: The class name 'time_and_date' doesn't match '[A-Z][a-zA-Z0-9]*'
src/main_frame/time_and_date.java:8:	ClassNamingConventions: The class name 'time_and_date' doesn't match '[A-Z][a-zA-Z0-9]*'
src/main_frame/time_and_date.java:8:	CommentRequired: Header comments are required
src/main_frame/time_and_date.java:8:	CommentRequired: Header comments are required
src/main_frame/time_and_date.java:8:	DoNotUseThreads: To be compliant to J2EE, a webapp should not use any thread.
src/main_frame/time_and_date.java:8:	DoNotUseThreads: To be compliant to J2EE, a webapp should not use any thread.
src/main_frame/time_and_date.java:9:	CommentRequired: Public method and constructor comments are required
src/main_frame/time_and_date.java:9:	CommentRequired: Public method and constructor comments are required
src/main_frame/time_and_date.java:9:	MissingOverride: The method 'run()' is missing an @Override annotation.
src/main_frame/time_and_date.java:9:	MissingOverride: The method 'run()' is missing an @Override annotation.
src/main_frame/time_and_date.java:11:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main_frame/time_and_date.java:11:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main_frame/time_and_date.java:11:	LocalVariableCouldBeFinal: Local variable 'time' could be declared final
src/main_frame/time_and_date.java:11:	LocalVariableCouldBeFinal: Local variable 'time' could be declared final
src/main_frame/time_and_date.java:12:	LocalVariableCouldBeFinal: Local variable 'hour' could be declared final
src/main_frame/time_and_date.java:12:	LocalVariableCouldBeFinal: Local variable 'hour' could be declared final
src/main_frame/time_and_date.java:13:	LocalVariableCouldBeFinal: Local variable 'minute' could be declared final
src/main_frame/time_and_date.java:13:	LocalVariableCouldBeFinal: Local variable 'minute' could be declared final
src/main_frame/time_and_date.java:14:	LocalVariableCouldBeFinal: Local variable 'second' could be declared final
src/main_frame/time_and_date.java:14:	LocalVariableCouldBeFinal: Local variable 'second' could be declared final
src/main_frame/time_and_date.java:15:	LawOfDemeter: Potential violation of Law of Demeter (static property access)
src/main_frame/time_and_date.java:15:	LawOfDemeter: Potential violation of Law of Demeter (static property access)
